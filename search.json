[{"path":"https://dmurdoch.github.io/orientlib/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Duncan Murdoch. Maintainer.","code":""},{"path":"https://dmurdoch.github.io/orientlib/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Murdoch, D. (2003). Orientlib: R package orientation data. Journal Statistical Software, 8(19), 1-11.","code":"@Article{,   title = {Orientlib: An {R} Package for Orientation Data},   journal = {Journal of Statistical Software},   volume = {8},   number = {19},   pages = {1-11},   year = {2003},   author = {D. Murdoch}, }"},{"path":"https://dmurdoch.github.io/orientlib/index.html","id":"orientlib-support-for-orientation-data","dir":"","previous_headings":"","what":"Support for Orientation Data","title":"Support for Orientation Data","text":"package contains methods working orientation data, .e. data (3). basic abstract class \"orientation\"; several concrete classes (constructions rotmatrix(), rotvector(), eulerzyx(), eulerzxz(), quaternion(), skewmatrix() skewvector()) storing different representations orientations. Methods defined get length vector orientations, well extract replace elements, multiply orientations raise real powers. also utility functions rotation.distance(), rotation.angle(), nearest.orthog() nearest.SO3(). plotting method boat3d() display orientation data 3D plot, linear modelling function orientlm().","code":""},{"path":"https://dmurdoch.github.io/orientlib/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Support for Orientation Data","text":"can install release version orientlib using can install development version orientlib GitHub :","code":"install.packages(\"orientlib\") # install.packages(\"devtools\") devtools::install_github(\"dmurdoch/orientlib\")"},{"path":"https://dmurdoch.github.io/orientlib/reference/boat3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw boat glyphs for orientation data — boat3d","title":"Draw boat glyphs for orientation data — boat3d","text":"Draws stylized sailboat represent orientation.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/boat3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw boat glyphs for orientation data — boat3d","text":"","code":"boat3d(orientation, x = 1:length(orientation), y = 0,         z = 0, scale = 0.25, col = 'red', add = FALSE, box = FALSE, axes = TRUE,        graphics = c('rgl', 'scatterplot3d'), ...)"},{"path":"https://dmurdoch.github.io/orientlib/reference/boat3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw boat glyphs for orientation data — boat3d","text":"orientation orientation object shown. x, y, z Coordinates boats shown. scale Size boats col Colour boats add Context continue drawing, FALSE clear first. box Whether draw box around plot axes Whether draw axes graphics graphics package use ... Additional graphics parameters; see Details ","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/boat3d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw boat glyphs for orientation data — boat3d","text":"identity orientation, sailboats shown upright.   orientations shown rotations glyph. (x,y,z) coordinate appears middle sail,   top gunwales boat. rgl package    installed, used draw solid faces boats can moved   user.  , scatterplot3d package   installed, used draw fixed wireframe boats.    search order can changed modifying graphics parameter. Additional graphics parameters may passed.  scatterplot3d used,   passed scatterplot3d function (ignored   adding existing plot).  Extra parameters passed   rgl. add scatterplot3d plot, must pass    return value initial plot value add.  See   orientlm function example.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/boat3d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw boat glyphs for orientation data — boat3d","text":"current   plot number rgl, scatterplot3d drawing context.  case, attribute named graphics added   indicate drawing device type.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/boat3d.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw boat glyphs for orientation data — boat3d","text":"Duncan Murdoch","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/boat3d.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Draw boat glyphs for orientation data — boat3d","text":"Requires rgl  scatterplot3d package.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/boat3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw boat glyphs for orientation data — boat3d","text":"","code":"x <- eulerzyx(psi=c(0,pi/4,0,0), theta=c(0,0,pi/4,0), phi=c(0,0,0,pi/4))  # Need a 3D renderer; assume scatterplot3d, but others could be used  s <- boat3d(x, 0:3, axes = FALSE, graphics = 'scatterplot3d') #> Loading required namespace: scatterplot3d text(s$xyz.convert(0:3, rep(-0.5,4), rep(-0.5,4)),       label = c('Id','z','y','x'))            if (FALSE) {  # if the rgl package is installed, this code will work  boat3d(x, 0:3, axes = FALSE, graphics = 'rgl') rgl::bbox3d(xat=0:3,xlab=c('Id','z','y','x'),yat=1,zat=1,color='grey')   }"},{"path":"https://dmurdoch.github.io/orientlib/reference/coerce-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for Function coerce in Package `orientlib' — coerce-methods","title":"Methods for Function coerce in Package `orientlib' — coerce-methods","text":"Coercion methods provided types orientation objects, matrices orientation classes.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/eulerzxz.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an orientation using Euler angles — eulerzxz","title":"Create an orientation using Euler angles — eulerzxz","text":"Creates eulerzxz-class object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/eulerzxz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an orientation using Euler angles — eulerzxz","text":"","code":"eulerzxz(phi, theta, psi)"},{"path":"https://dmurdoch.github.io/orientlib/reference/eulerzxz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an orientation using Euler angles — eulerzxz","text":"phi Rotation Z axis theta Rotation X axis psi rotation Z axis","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/eulerzxz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an orientation using Euler angles — eulerzxz","text":"rotations expressed radians applied order Z, X, Z. theta psi missing, phi taken n x 3 matrix   (3 element vector) holding 3 Euler angles; alternatively, may orientation object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/eulerzxz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an orientation using Euler angles — eulerzxz","text":"eulerzxz-class object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/eulerzxz.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an orientation using Euler angles — eulerzxz","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/orientlib/reference/eulerzxz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an orientation using Euler angles — eulerzxz","text":"","code":"x <- eulerzxz(c(1,0,0), c(0,1,0), c(0,0,1)) x #> An object of class \"eulerzxz\" #> Slot \"x\": #>      phi theta psi #> [1,]   1     0   0 #> [2,]   0     1   0 #> [3,]   0     0   1 #>  rotmatrix(x) #> An object of class \"rotmatrix\" #> Slot \"x\": #> , , 1 #>  #>            [,1]      [,2] [,3] #> [1,]  0.5403023 0.8414710    0 #> [2,] -0.8414710 0.5403023    0 #> [3,]  0.0000000 0.0000000    1 #>  #> , , 2 #>  #>      [,1]       [,2]      [,3] #> [1,]    1  0.0000000 0.0000000 #> [2,]    0  0.5403023 0.8414710 #> [3,]    0 -0.8414710 0.5403023 #>  #> , , 3 #>  #>            [,1]      [,2] [,3] #> [1,]  0.5403023 0.8414710    0 #> [2,] -0.8414710 0.5403023    0 #> [3,]  0.0000000 0.0000000    1 #>  #>"},{"path":"https://dmurdoch.github.io/orientlib/reference/eulerzyx.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an orientation using Euler angles — eulerzyx","title":"Create an orientation using Euler angles — eulerzyx","text":"Creates eulerzyx-class object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/eulerzyx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an orientation using Euler angles — eulerzyx","text":"","code":"eulerzyx(psi, theta, phi)"},{"path":"https://dmurdoch.github.io/orientlib/reference/eulerzyx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an orientation using Euler angles — eulerzyx","text":"psi Rotation Z axis theta Rotation Y axis phi Rotation X axis","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/eulerzyx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an orientation using Euler angles — eulerzyx","text":"rotations expressed radians applied order Z, Y, X. theta phi missing, psi taken n x 3 matrix   (3 element vector) holding 3 Euler angles; alternatively, orientation object   may used.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/eulerzyx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an orientation using Euler angles — eulerzyx","text":"eulerzyx-class object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/eulerzyx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an orientation using Euler angles — eulerzyx","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/orientlib/reference/eulerzyx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an orientation using Euler angles — eulerzyx","text":"","code":"x <- eulerzyx(c(1,0,0), c(0,1,0), c(0,0,1)) x #> An object of class \"eulerzyx\" #> Slot \"x\": #>      psi theta phi #> [1,]   1     0   0 #> [2,]   0     1   0 #> [3,]   0     0   1 #>  rotmatrix(x) #> An object of class \"rotmatrix\" #> Slot \"x\": #> , , 1 #>  #>            [,1]      [,2] [,3] #> [1,]  0.5403023 0.8414710    0 #> [2,] -0.8414710 0.5403023    0 #> [3,]  0.0000000 0.0000000    1 #>  #> , , 2 #>  #>           [,1] [,2]       [,3] #> [1,] 0.5403023    0 -0.8414710 #> [2,] 0.0000000    1  0.0000000 #> [3,] 0.8414710    0  0.5403023 #>  #> , , 3 #>  #>      [,1]       [,2]      [,3] #> [1,]    1  0.0000000 0.0000000 #> [2,]    0  0.5403023 0.8414710 #> [3,]    0 -0.8414710 0.5403023 #>  #>"},{"path":"https://dmurdoch.github.io/orientlib/reference/index-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for indexing orientations — index-methods","title":"Methods for indexing orientations — index-methods","text":"Methods defined indexing types orientations.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/index-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods for indexing orientations — index-methods","text":"Single bracket indexing (e.g. x[1:3]) creates new orientation object class original selecting appropriate entries.  Double bracket indexing (e.g. x[[3]]) extracts chosen data matrix vector, depending class orientation.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/length-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Length of orientation object — length-methods","title":"Length of orientation object — length-methods","text":"generic length() function methods orientations; counts number orientations object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/matrix-classes.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix orientation classes — matrix-classes","title":"Matrix orientation classes — matrix-classes","text":"orientation represented 3 x 3 (3) matrices 3 x 3 skew symmetric matrices","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/matrix-classes.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Matrix orientation classes — matrix-classes","text":"Objects can created calls form rotmatrix(x)  skewmatrix(x). objects store matrices 3 x 3 x n array.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/matrix-classes.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Matrix orientation classes — matrix-classes","text":"x: 3 x 3 x n array holding matrices.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/matrix-classes.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Matrix orientation classes — matrix-classes","text":"Class \"orientation\", directly. Class \"vector\", class \"orientation\".","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/matrix-classes.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Matrix orientation classes — matrix-classes","text":"[, [<- Extract assign subvector [[, [[<- Extract assign entry length length orientation vector coerce Coerce methods defined convert orientation descendants     one another, coerce appropriately shaped matrix array rotmatrix","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/matrix-classes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Matrix orientation classes — matrix-classes","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/orientlib/reference/matrix-classes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matrix orientation classes — matrix-classes","text":"","code":"x <- rotmatrix(matrix(c(1,0,0, 0,1,0, 0,0,1), 3, 3)) x #> An object of class \"rotmatrix\" #> Slot \"x\": #> , , 1 #>  #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 #>  #>  skewmatrix(x) #> An object of class \"skewmatrix\" #> Slot \"x\": #> , , 1 #>  #>      [,1] [,2] [,3] #> [1,]    0    0    0 #> [2,]    0    0    0 #> [3,]    0    0    0 #>  #>"},{"path":"https://dmurdoch.github.io/orientlib/reference/matrix-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for matrix operations in `orientlib' — matrix-methods","title":"Methods for matrix operations in `orientlib' — matrix-methods","text":"Methods defined matrix multiplication %*% transposition t(), real powers ^.  operate orientations term term.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/mean-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for calculating the mean — mean-methods","title":"Methods for calculating the mean — mean-methods","text":"mean function.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/mean-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Methods for calculating the mean — mean-methods","text":"x = \"\" standard mean function x = \"orientation\" find nearest (3) matrix mean rotmatrix-class representation orientations","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/nearest.html","id":null,"dir":"Reference","previous_headings":"","what":"Find nearest SO(3) or orthogonal matrix. — nearest","title":"Find nearest SO(3) or orthogonal matrix. — nearest","text":"Converts arbitrary 3 x 3 matrices  nearest (3) orthogonal matrix.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/nearest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find nearest SO(3) or orthogonal matrix. — nearest","text":"","code":"nearest.SO3(x) nearest.orthog(x)"},{"path":"https://dmurdoch.github.io/orientlib/reference/nearest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find nearest SO(3) or orthogonal matrix. — nearest","text":"x 3 x 3 matrices stored 3 x 3 x n array)","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/nearest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find nearest SO(3) or orthogonal matrix. — nearest","text":"Uses Stephens' (1979) algorithm find nearest (entry-wise Euclidean sense) (3) orthogonal matrix given matrix.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/nearest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find nearest SO(3) or orthogonal matrix. — nearest","text":"nearest.SO3 produces orientation-class object holding closest orientations. nearest.orthog produces 3 x 3 x n array orthogonal matrices.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/nearest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find nearest SO(3) or orthogonal matrix. — nearest","text":"Stephens (1979).  Vector correlation.  Biometrika 66, 41-48.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/nearest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find nearest SO(3) or orthogonal matrix. — nearest","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/orientlib/reference/nearest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find nearest SO(3) or orthogonal matrix. — nearest","text":"","code":"x <- matrix(rnorm(9), 3,3) nearest.orthog(x) #> , , 1 #>  #>            [,1]        [,2]      [,3] #> [1,]  0.5590511  0.04878985 0.8276964 #> [2,] -0.3296190 -0.90291392 0.2758583 #> [3,] -0.7607977  0.42704332 0.4886930 #>  nearest.SO3(x) #> An object of class \"rotmatrix\" #> Slot \"x\": #> , , 1 #>  #>            [,1]         [,2]       [,3] #> [1,]  0.5824788 -0.784314543  0.2134693 #> [2,] -0.3547565 -0.009004573  0.9349154 #> [3,] -0.7313455 -0.620298005 -0.2834857 #>  #>  x <- -x nearest.orthog(x) #> , , 1 #>  #>            [,1]        [,2]       [,3] #> [1,] -0.5590511 -0.04878985 -0.8276964 #> [2,]  0.3296190  0.90291392 -0.2758583 #> [3,]  0.7607977 -0.42704332 -0.4886930 #>  nearest.SO3(x) #> An object of class \"rotmatrix\" #> Slot \"x\": #> , , 1 #>  #>            [,1]        [,2]       [,3] #> [1,] -0.5590511 -0.04878985 -0.8276964 #> [2,]  0.3296190  0.90291392 -0.2758583 #> [3,]  0.7607977 -0.42704332 -0.4886930 #>  #>"},{"path":"https://dmurdoch.github.io/orientlib/reference/orientation-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Abstract class vectors various representations (3) (orientation) objects.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/orientation-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"virtual Class: objects may created .","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/orientation-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"coerce Methods defined coerce orientation objects     concrete descendant class. %*% Matrix multiplication acts orientation objects      \tcomponent component, producing compositions rotations. ^ orientation raised power multiplying component rotation angles      \tpower. t transpose orientation object      \tcomponent component inverse. mean mean orientation object nearest (3) matrix      element--element mean 3 x 3 rotation matrix representation. weighted.mean weighted mean, defined analogously mean.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/orientation-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/orientlib/reference/orientation-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"x <- rotmatrix(diag(3)) x #> An object of class \"rotmatrix\" #> Slot \"x\": #> , , 1 #>  #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 #>  #>  rotvector(x) #> An object of class \"rotvector\" #> Slot \"x\": #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #> [1,]    1    0    0    0    1    0    0    0    1 #>  eulerzyx(x) #> An object of class \"eulerzyx\" #> Slot \"x\": #>      psi theta phi #> [1,]   0     0   0 #>  eulerzxz(x) #> An object of class \"eulerzxz\" #> Slot \"x\": #>      phi theta psi #> [1,]   0     0   0 #>  quaternion(x) #> An object of class \"quaternion\" #> Slot \"x\": #>      q1 q2 q3 q4 #> [1,]  0  0  0  1 #>"},{"path":"https://dmurdoch.github.io/orientlib/reference/orientlib.html","id":null,"dir":"Reference","previous_headings":"","what":"Orientation Library — orientlib","title":"Orientation Library — orientlib","text":"Representations, conversions display orientation data.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/orientlib.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Orientation Library — orientlib","text":"package contains methods working orientation data, .e.   data (3).  basic abstract class orientation;   several concrete classes (rotmatrix,    rotvector, eulerzyx, eulerzxz,    quaternion, skewmatrix skewvector)    storing different    representations orientations. Methods defined get length vector orientations, well   extract replace elements, multiply orientations raise    real powers. also utility functions rotation.distance,   rotation.angle, nearest.orthog,    nearest.SO3. plotting method boat3d display orientation data   3D plot, linear modelling function orientlm.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/orientlib.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Orientation Library — orientlib","text":"Duncan Murdoch","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/orientlib.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Orientation Library — orientlib","text":"Plots require either rgl scatterplot3d package.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/orientlm.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear models for orientation data — orientlm","title":"Linear models for orientation data — orientlm","text":"Regression models matched pairs orientations.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/orientlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear models for orientation data — orientlm","text":"","code":"orientlm(observed, leftformula, trueorient = rotmatrix(diag(3)),           rightformula, data = list(), subset, weights, na.action,           iterations = 5)"},{"path":"https://dmurdoch.github.io/orientlib/reference/orientlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear models for orientation data — orientlm","text":"observed Observed orientations leftformula Formula ``left'' model (see ) trueorient ``True'' orientation (see ) rightformula Formula ``right'' model (see ) data Optional data frame predictors linear model subset Optional logical vector indicating subset data weights Optional weights na.action Optional NA function predictors iterations many iterations use.  Ignored unless    \tleftformula rightformula specified.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/orientlm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear models for orientation data — orientlm","text":"Prentice (1989) model matched pairs orientations $$E(V_i) = k A_1^t U_i A_2$$ \\(V_i\\) observed orientation, \\(A_1\\) \\(A_2\\) orientation matrices, \\(U_i\\) ``true'' orientation, \\(k\\) constant.  assumed errors symmetrically distributed identity matrix. function generalizes model, allowing \\(A_1\\) \\(A_2\\) depend regressor variables leftformula rightformula respectively.   formulas include predictor variables (right hand side) , e.g. use ~ x + y + z rather response ~ x + y + z.  Specify response using observed argument.   formulas ~ 1, .e. intercepts , Prentice's original model  recovered.  general models fit coordinatewise linear regression rotmatrix representation orientation, fitted values projected onto (3) using  nearest.SO3 function. left right models given, Prentice's iterative approach used fixed number iterations.  Note Shin (1999) found Prentice's scheme sometimes fails find  global minimum; function presumably suffers failing.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/orientlm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear models for orientation data — orientlm","text":"Returns list containing following components: leftfit Result lm call based leftformula rightfit Result lm call based rightformula A1 Fitted values \\(A_1\\) observation A2 Fitted values \\(A_2\\) observation predict Fitted values \\(A_1^t U_i A_2\\) observation","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/orientlm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Linear models for orientation data — orientlm","text":"Prentice, M.J. (1989).  Spherical regression matched pairs orientation statistics. JRSS B 51, 241-248. Shin, H.S.H. (1999).  Experimental Design Orientation Models.  PhD thesis, Queen's University.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/orientlm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Linear models for orientation data — orientlm","text":"Duncan Murdoch","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/orientlm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear models for orientation data — orientlm","text":"","code":"x <- rep(1:10,10) y <- rep(1:10,each=10) A1 <- skewvector(cbind(x/10,y/10,rep(0,100))) A2 <- skewvector(c(1,1,1)) trueorientation <- skewvector(matrix(rnorm(300),100)) noise <- skewvector(matrix(rnorm(300)/10,100)) obs <- t(A1) %*% trueorientation %*% A2 %*% noise  fit <- orientlm(obs, ~ x + y, trueorientation, ~ 1)  context <- boat3d(A1, x, z=y, col = 'green', graphics='scatterplot3d') boat3d(fit$A1, x, z=y, add=context)"},{"path":"https://dmurdoch.github.io/orientlib/reference/quaternion.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an orientation using quaternions — quaternion","title":"Create an orientation using quaternions — quaternion","text":"Creates quaternion-class object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/quaternion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an orientation using quaternions — quaternion","text":"","code":"quaternion(m)"},{"path":"https://dmurdoch.github.io/orientlib/reference/quaternion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an orientation using quaternions — quaternion","text":"m n x 4 matrix 4 element vector containing unit quaternion, orientation object","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/quaternion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an orientation using quaternions — quaternion","text":"rows m 4 element unit vectors interpreted  follows:  first 3 (x,y,z) define axis rotation, last element gives cosine half angle rotation counter-clockwise direction looking  axis towards origin.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/quaternion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an orientation using quaternions — quaternion","text":"quaternion-class object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/quaternion.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an orientation using quaternions — quaternion","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/orientlib/reference/quaternion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an orientation using quaternions — quaternion","text":"","code":"x <- quaternion(c(1,0,0,0)) x #> An object of class \"quaternion\" #> Slot \"x\": #>      [,1] [,2] [,3] [,4] #> [1,]    1    0    0    0 #>  rotmatrix(x) #> An object of class \"rotmatrix\" #> Slot \"x\": #> , , 1 #>  #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0   -1    0 #> [3,]    0    0   -1 #>  #>"},{"path":"https://dmurdoch.github.io/orientlib/reference/rotation.distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotation angle or distance — rotation.distance","title":"Rotation angle or distance — rotation.distance","text":"Calculates angle (radians) rotation taking one orientation another.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/rotation.distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotation angle or distance — rotation.distance","text":"","code":"rotation.angle(x) rotation.distance(x, y)"},{"path":"https://dmurdoch.github.io/orientlib/reference/rotation.distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotation angle or distance — rotation.distance","text":"x,y Two orientation objects","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/rotation.distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotation angle or distance — rotation.distance","text":"rotation.distance returns vector length max(length(x), length(y)) containing angle rotation taking corresponding elements x y (usual recycling rules different lengths). rotation.angle equivalent calculating rotation.distance identity matrix.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/rotation.distance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotation angle or distance — rotation.distance","text":"y missing call rotation.distance,  treated identity, .e. rotation.angle(x) calculated.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/rotation.distance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rotation angle or distance — rotation.distance","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/orientlib/reference/rotation.distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotation angle or distance — rotation.distance","text":"","code":"rotation.angle(eulerzyx(1,0,0)) #> [1] 1 rotation.distance(eulerzyx(1,0,0), eulerzyx(0,1,0)) #> [1] 1.383436"},{"path":"https://dmurdoch.github.io/orientlib/reference/rotmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an orientation using Euler angles — rotmatrix","title":"Create an orientation using Euler angles — rotmatrix","text":"Creates rotmatrix-class object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/rotmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an orientation using Euler angles — rotmatrix","text":"","code":"rotmatrix(a)"},{"path":"https://dmurdoch.github.io/orientlib/reference/rotmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an orientation using Euler angles — rotmatrix","text":"3 x 3 matrix 3 x 3 x n array matrices orientation object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/rotmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an orientation using Euler angles — rotmatrix","text":"rotmatrix-class object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/rotmatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an orientation using Euler angles — rotmatrix","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/orientlib/reference/rotmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an orientation using Euler angles — rotmatrix","text":"","code":"x <- rotmatrix(matrix(c(1,0,0, 0,1,0, 0,0,1), 3, 3)) x #> An object of class \"rotmatrix\" #> Slot \"x\": #> , , 1 #>  #>      [,1] [,2] [,3] #> [1,]    1    0    0 #> [2,]    0    1    0 #> [3,]    0    0    1 #>  #>"},{"path":"https://dmurdoch.github.io/orientlib/reference/rotvector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an orientation using vectorized 3x3 matrices — rotvector","title":"Create an orientation using vectorized 3x3 matrices — rotvector","text":"Creates rotvector-class object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/rotvector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an orientation using vectorized 3x3 matrices — rotvector","text":"","code":"rotvector(m)"},{"path":"https://dmurdoch.github.io/orientlib/reference/rotvector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an orientation using vectorized 3x3 matrices — rotvector","text":"m n x 9 matrix 9 element vector whose rows vectorized 3x3 matrices, orientation object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/rotvector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an orientation using vectorized 3x3 matrices — rotvector","text":"Converts matrix whose rows vectorized 3x3 matrices (column-major form) rotvector-class object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/rotvector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an orientation using vectorized 3x3 matrices — rotvector","text":"rotvector-class object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/rotvector.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an orientation using vectorized 3x3 matrices — rotvector","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/orientlib/reference/rotvector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an orientation using vectorized 3x3 matrices — rotvector","text":"","code":"x <- rotvector(c(0,1,0,-1,0,0,0,0,1)) x #> An object of class \"rotvector\" #> Slot \"x\": #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] #> [1,]    0    1    0   -1    0    0    0    0    1 #>  rotmatrix(x) #> An object of class \"rotmatrix\" #> Slot \"x\": #> , , 1 #>  #>      [,1] [,2] [,3] #> [1,]    0   -1    0 #> [2,]    1    0    0 #> [3,]    0    0    1 #>  #>"},{"path":"https://dmurdoch.github.io/orientlib/reference/skewmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an orientation using the entries in a skew-symmetric matrix representation — skewmatrix","title":"Create an orientation using the entries in a skew-symmetric matrix representation — skewmatrix","text":"Creates skewmatrix-class object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/skewmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an orientation using the entries in a skew-symmetric matrix representation — skewmatrix","text":"","code":"skewmatrix(a)"},{"path":"https://dmurdoch.github.io/orientlib/reference/skewmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an orientation using the entries in a skew-symmetric matrix representation — skewmatrix","text":"3 x 3 x n array 3 x 3 matrix containing entries skew-symmetric matrix,   \t    orientation object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/skewmatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an orientation using the entries in a skew-symmetric matrix representation — skewmatrix","text":"entries [,,] 3 x 3 skew-symmetric matrices.   matrix exponential give (3) matrices.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/skewmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an orientation using the entries in a skew-symmetric matrix representation — skewmatrix","text":"skewmatrix-class object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/skewmatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an orientation using the entries in a skew-symmetric matrix representation — skewmatrix","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/orientlib/reference/skewmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an orientation using the entries in a skew-symmetric matrix representation — skewmatrix","text":"","code":"x <- skewmatrix(matrix(c(0,1,2,-1,0,3,-2,-3,0),3,3)) x #> An object of class \"skewmatrix\" #> Slot \"x\": #> , , 1 #>  #>      [,1] [,2] [,3] #> [1,]    0   -1   -2 #> [2,]    1    0   -3 #> [3,]    2    3    0 #>  #>  rotmatrix(x) #> An object of class \"rotmatrix\" #> Slot \"x\": #> , , 1 #>  #>             [,1]       [,2]       [,3] #> [1,]  0.34810748 -0.6313497  0.6929782 #> [2,] -0.93319235 -0.3037850  0.1920070 #> [3,]  0.08929286 -0.7135210 -0.6949206 #>  #>  skewvector(x) #> An object of class \"skewvector\" #> Slot \"x\": #>      [,1] [,2] [,3] #> [1,]   -3    2   -1 #>  rotation.angle(x) #> [1] 2.541528"},{"path":"https://dmurdoch.github.io/orientlib/reference/skewvector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an orientation using the entries in a skew-symmetric matrix representation — skewvector","title":"Create an orientation using the entries in a skew-symmetric matrix representation — skewvector","text":"Creates skewvector-class object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/skewvector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an orientation using the entries in a skew-symmetric matrix representation — skewvector","text":"","code":"skewvector(m)"},{"path":"https://dmurdoch.github.io/orientlib/reference/skewvector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an orientation using the entries in a skew-symmetric matrix representation — skewvector","text":"m n x 3 matrix 3 element vector containing entries skew-symmetric matrix,   \t    orientation object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/skewvector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an orientation using the entries in a skew-symmetric matrix representation — skewvector","text":"rows m 3 element vectors (x,y,z) interpreted  follows:  matrix exponential matrix ((0, -z, y), (z, 0, -x), (-y, x, 0)) (3) matrix.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/skewvector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an orientation using the entries in a skew-symmetric matrix representation — skewvector","text":"skewvector-class object.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/skewvector.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an orientation using the entries in a skew-symmetric matrix representation — skewvector","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/orientlib/reference/skewvector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an orientation using the entries in a skew-symmetric matrix representation — skewvector","text":"","code":"x <- skewvector(c(1,0,0)) x #> An object of class \"skewvector\" #> Slot \"x\": #>      [,1] [,2] [,3] #> [1,]    1    0    0 #>  rotmatrix(x) #> An object of class \"rotmatrix\" #> Slot \"x\": #> , , 1 #>  #>      [,1]       [,2]      [,3] #> [1,]    1  0.0000000 0.0000000 #> [2,]    0  0.5403023 0.8414710 #> [3,]    0 -0.8414710 0.5403023 #>  #>  rotation.angle(x) #> [1] 1"},{"path":"https://dmurdoch.github.io/orientlib/reference/vector-classes.html","id":null,"dir":"Reference","previous_headings":"","what":"Orientation classes — vector-classes","title":"Orientation classes — vector-classes","text":"vector orientations, represented vector numbers. types stores orientations rows matrix slot x. eulerzyx class uses 3 Euler angles roll-pitch-yaw scheme (rotation Z axis, Y axis, X axis). eulerzxz class uses 3 Euler angles X system scheme (rotation Z axis, X axis, Z axis ). rotvector class uses 9 components 3 x 3 rotation matrix, stored column-major order. quaternion class uses 4 components unit quaternion. skewvector class uses 3 non-zero components skew-symmetric matrix, (x,y,z) stores matrix  ((0, -z, y), (z, 0, -x), (-y, x, 0)).","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/vector-classes.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Orientation classes — vector-classes","text":"Objects class can created calls corresponding constructor functions:  eulerzyx, eulerzxz, rotvector, quaternion, skewmatrix skewvector.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/vector-classes.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Orientation classes — vector-classes","text":"x: n x m matrix object holding vector representations,     m 3, 4, 9.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/vector-classes.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Orientation classes — vector-classes","text":"Class \"orientation\", directly. Class \"vector\", class \"orientation\".","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/vector-classes.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Orientation classes — vector-classes","text":"[, [<- Extract assign subvector [[, [[<- Extract assign entry length length orientation vector coerce Coerce methods defined convert orientation descendants     one another, coerce appropriately shaped matrix array rotmatrix","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/vector-classes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Orientation classes — vector-classes","text":"Duncan Murdoch","code":""},{"path":[]},{"path":"https://dmurdoch.github.io/orientlib/reference/vector-classes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Orientation classes — vector-classes","text":"","code":"x <- eulerzyx(0,pi/4,0) x #> An object of class \"eulerzyx\" #> Slot \"x\": #>      psi     theta phi #> [1,]   0 0.7853982   0 #>  eulerzxz(x) #> An object of class \"eulerzxz\" #> Slot \"x\": #>           phi     theta       psi #> [1,] 1.570796 0.7853982 -1.570796 #>  rotmatrix(x) #> An object of class \"rotmatrix\" #> Slot \"x\": #> , , 1 #>  #>           [,1] [,2]       [,3] #> [1,] 0.7071068    0 -0.7071068 #> [2,] 0.0000000    1  0.0000000 #> [3,] 0.7071068    0  0.7071068 #>  #>  rotvector(x) #> An object of class \"rotvector\" #> Slot \"x\": #>           [,1] [,2]      [,3] [,4] [,5] [,6]       [,7] [,8]      [,9] #> [1,] 0.7071068    0 0.7071068    0    1    0 -0.7071068    0 0.7071068 #>  quaternion(x) #> An object of class \"quaternion\" #> Slot \"x\": #>      q1        q2 q3        q4 #> [1,]  0 0.3826834  0 0.9238795 #>  skewvector(x) #> An object of class \"skewvector\" #> Slot \"x\": #>      [,1]      [,2] [,3] #> [1,]    0 0.7853982    0 #>"},{"path":"https://dmurdoch.github.io/orientlib/reference/weighted.mean-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted mean method — weighted.mean-methods","title":"Weighted mean method — weighted.mean-methods","text":"weighted mean function.","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/weighted.mean-methods.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Weighted mean method — weighted.mean-methods","text":"x = \"\", w = \"\" standard stats::weighted.mean x = \"orientation\", w = \"numeric\" weighted mean orientations","code":""},{"path":"https://dmurdoch.github.io/orientlib/reference/weighted.mean-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted mean method — weighted.mean-methods","text":"weighted mean orientations nearest (3) matrix entrywise weighted mean  rotmatrix-class matrices.","code":""}]
